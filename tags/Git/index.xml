<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on 新月的博客</title>
    <link>http://programya.com/tags/Git/</link>
    <description>Recent content in Git on 新月的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 15 Apr 2019 09:00:00 +0800</lastBuildDate>
    
	<atom:link href="http://programya.com/tags/Git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git Action 自动部署</title>
      <link>http://programya.com/post/Others/Github-Action-%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Mon, 15 Apr 2019 09:00:00 +0800</pubDate>
      
      <guid>http://programya.com/post/Others/Github-Action-%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/</guid>
      <description>博客的前端项目同样需要在每次修改之后自动部署到服务器上，但是由于服务器内存太小导致，运行 npm run build 命令的时候内存不足导致其他程序异常退出，所以没有使用 Jenkins 进行自动化部署。然后发现 Github 提供了 Action 可以进行自动化 build 部署。所以对于前端项目使用 GitHub Action 进行部署。 本文仅记录自己前端项目的自动构建配置流程，</description>
    </item>
    
    <item>
      <title>Git 基础</title>
      <link>http://programya.com/post/Others/Git-%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Sat, 13 Apr 2019 09:00:00 +0800</pubDate>
      
      <guid>http://programya.com/post/Others/Git-%E5%9F%BA%E7%A1%80/</guid>
      <description>Git 是一个开源的分布式版本控制系统，Git 主要分为三个区域：工作区，暂存区和版本库 上图中左侧为工作区域，右侧为版本库。在版本库中标记为 index 的区域是暂存区，标记 master 的是代表 master 分支锁代表的目录树。 Git 常用命令 Git 配置命令 1 2 3 git config --list 列出所有的配置信息 git config --global user.name &amp;#34;User Name&amp;#34; git config --global user.email &amp;#34;User Email&amp;#34; Git 基本命令 1 2 3 4 5</description>
    </item>
    
  </channel>
</rss>