<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring 注解 on 新月的博客</title>
    <link>https://sangzhenya.github.io/tags/Spring-%E6%B3%A8%E8%A7%A3/</link>
    <description>Recent content in Spring 注解 on 新月的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 21 Jan 2019 09:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://sangzhenya.github.io/tags/Spring-%E6%B3%A8%E8%A7%A3/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring 注解 --- 自动注入</title>
      <link>https://sangzhenya.github.io/post/Spring/Spring-Core/Spring-%E6%B3%A8%E8%A7%A3-%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D/</link>
      <pubDate>Mon, 21 Jan 2019 09:00:00 +0800</pubDate>
      
      <guid>https://sangzhenya.github.io/post/Spring/Spring-Core/Spring-%E6%B3%A8%E8%A7%A3-%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D/</guid>
      <description>@Autowired 自动注入对象。 默认按照类型查找类似: applicationContext.getBean(UserDao.class) 如果找到多个，则将属性名称作为 Bean Id 去容器中查找：applicationContext.getBean(&#39;userDao&#39;) 另外也可以在定义 bean 的地方添加 @Primary 注解，作为默认注入的 bean。也可以使用 @Qualifier 注解，和@Autowired 放在一起， 指定注入</description>
    </item>
    
    <item>
      <title>Spring 注解 --- 初始化、销毁及赋值</title>
      <link>https://sangzhenya.github.io/post/Spring/Spring-Core/Spring-%E6%B3%A8%E8%A7%A3-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</link>
      <pubDate>Sun, 20 Jan 2019 09:00:00 +0800</pubDate>
      
      <guid>https://sangzhenya.github.io/post/Spring/Spring-Core/Spring-%E6%B3%A8%E8%A7%A3-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</guid>
      <description>bean 初始化和销毁方法可以通过以下四种方式指定： 通过 Spring 提供的 @Bean 属性的 initMethod 和 destoryMethod 指定 通过实现 InitializingBean, DisposableBean 接口 使用 JSR250 提供的 @PostConstruct 和 @PreDestroy 注解 使用自定义 BeanPostProcessor 对于单实例对象，容器启动的时候创建对象，创建完成调用初始化方法，容器关闭的时候（applicationContext.close();）调用销毁方法 对于多实</description>
    </item>
    
    <item>
      <title>Spring 注解 --- 组件注册</title>
      <link>https://sangzhenya.github.io/post/Spring/Spring-Core/Spring-%E6%B3%A8%E8%A7%A3-%E7%BB%84%E4%BB%B6%E6%B3%A8%E5%86%8C/</link>
      <pubDate>Sat, 19 Jan 2019 09:00:00 +0800</pubDate>
      
      <guid>https://sangzhenya.github.io/post/Spring/Spring-Core/Spring-%E6%B3%A8%E8%A7%A3-%E7%BB%84%E4%BB%B6%E6%B3%A8%E5%86%8C/</guid>
      <description>@Configuration 把当前文件用作配置类。 1 2 @Configuration public class MainConfig { @ComponentScan 指定扫描的包。也可以指定包含或者排除规则。 includeFilters 指定包含规则，这时需要使用 useDefaultFilters = false。 excludeFilters 指定过滤规则。 type = FilterType.CUSTOM, classes = {MyTypeFilter.class} 设置自定义规则 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 // 1. 包扫描，指定扫描的包并设置过滤规则 @Configuration @ComponentScan(value</description>
    </item>
    
  </channel>
</rss>