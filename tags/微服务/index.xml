<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>微服务 on 新月的博客</title>
    <link>https://sangzhenya.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/</link>
    <description>Recent content in 微服务 on 新月的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 05 Jan 2020 09:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://sangzhenya.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>微服务简介</title>
      <link>https://sangzhenya.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Sun, 05 Jan 2020 09:00:00 +0800</pubDate>
      
      <guid>https://sangzhenya.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%AE%80%E4%BB%8B/</guid>
      <description>微服务，通常而言微服务架构是一种架构模式或说是一种架构风格，其倡导将单一应用程序划分成一组小的服务，每个服务运行在其独立的自己的进程中，服务之间相互协调相互配合，为用户提供最终价值。服务之间采用轻量级的通讯机制相同通讯。每个服务围绕着具体业务进行构建，并且能够被独立的部署到生产环</description>
    </item>
    
    <item>
      <title>ACID 原则 与 CAP 原则</title>
      <link>https://sangzhenya.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1/CAP-%E5%8E%9F%E5%88%99-/</link>
      <pubDate>Fri, 03 Jan 2020 09:00:00 +0800</pubDate>
      
      <guid>https://sangzhenya.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1/CAP-%E5%8E%9F%E5%88%99-/</guid>
      <description>ACID 原则 A (Atomicity) 原子性 原子性即事务里的所有操作要么全部做完，要么都不做。事务成功的条件就是事务里所有操作都成功，任意一个事务失败，则整个事务就是失败，需要回滚。 C (Consistency) 一致性 一致性即数据库要一直处于一致状态，事务的运行不会改变数据库原本的一致性约束。 I (Isolation) 独立性 独立性即并发的事务之间不会相互</description>
    </item>
    
  </channel>
</rss>