<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>设计模式 on 新月的博客</title>
    <link>http://programya.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
    <description>Recent content in 设计模式 on 新月的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 12 Jan 2019 09:00:00 +0800</lastBuildDate>
    
	<atom:link href="http://programya.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>设计模式 摘录</title>
      <link>http://programya.com/post/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%91%98%E5%BD%95/</link>
      <pubDate>Sat, 12 Jan 2019 09:00:00 +0800</pubDate>
      
      <guid>http://programya.com/post/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%91%98%E5%BD%95/</guid>
      <description>创建型模式 工厂模式 抽象工厂模式 单例模式 建造者模式 原型模式 结构型模式 适配器模式 桥接模式 过滤器模式 组合模式 装饰器模式 外观模式 享元模式 代理模式 行为型模式 责任链模式 命令模式 解释器模式 迭代器模式 中介者模式 备忘录模式 观察者模式 状态模式 空对象模式 策略模式 模板模式 访问者模式 J2EE 模式 MVC 模式 业务代表模</description>
    </item>
    
    <item>
      <title>敏捷开发的六个原则</title>
      <link>http://programya.com/post/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91%E7%9A%84%E5%85%AD%E4%B8%AA%E5%8E%9F%E5%88%99/</link>
      <pubDate>Fri, 11 Jan 2019 09:00:00 +0800</pubDate>
      
      <guid>http://programya.com/post/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91%E7%9A%84%E5%85%AD%E4%B8%AA%E5%8E%9F%E5%88%99/</guid>
      <description>单一职责原则（SRP） 一个类只做一件事。就一个类而言，应该仅有一个引起它变化的原因。职责就是变化的原因，如果你多于一个的动机去改变一个类，那么这个类就具有多于一个的职责。 开放 - 闭合原则（OCP） 软件实体（类，模块，函数等等）应该可以扩展的，但是不可修改的。如果程序的一处改动就会产</description>
    </item>
    
  </channel>
</rss>