<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kafka on 新月的博客</title>
    <link>https://programya.com/tags/Kafka/</link>
    <description>Recent content in Kafka on 新月的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 21 Jan 2020 09:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://programya.com/tags/Kafka/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kafka 使用</title>
      <link>https://programya.com/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1/kafka/Kafka-%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 21 Jan 2020 09:00:00 +0800</pubDate>
      
      <guid>https://programya.com/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1/kafka/Kafka-%E4%BD%BF%E7%94%A8/</guid>
      <description>发送 Kafka 的 Producer 发送消息时采用异步发送的方式，在消息的发送过程中，涉及到了两个线程， main 线程和 sender 线程，以及一个线程共享变量 RecordAccumulator main 线程将消息发送给 RecordAccumulator Sender 线程不断从 RecordAccumulator 中拉取消息发送到 Kafka Broker 上。如下图所示： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 // 一个简单的 Producer public class MyPartitionerProducer { static Logger logger = LoggerFactory.getLogger(MyPartitionerProducer.class); public</description>
    </item>
    
    <item>
      <title>Kafka</title>
      <link>https://programya.com/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1/kafka/Kafka/</link>
      <pubDate>Fri, 17 Jan 2020 09:00:00 +0800</pubDate>
      
      <guid>https://programya.com/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1/kafka/Kafka/</guid>
      <description>kafka 是一个分布式的记于订阅发布模式的消息队列，主要应用于大数据实时处理领域。 消息队列好处：解耦，可恢复性，缓冲，灵活性与峰值处理能力，异步通讯。 消息队列有两种模式：点对点模式即一对一，发布订阅模式即一对多。 Kafka 基础架构 如下图所示： 上图中主要组成有以下几部分： Producer： 消息生产</description>
    </item>
    
  </channel>
</rss>